name: Meadow.CLI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-optionally-publish-nuget:
    runs-on: windows-latest
    name: Build and Optionally Publish Meadow.CLI nuget
    env:
      RELEASE_VERSION: 0.97.0
      
    steps:
    - name: Checkout Meadow.CLI.Core side-by-side
      uses: actions/checkout@v2
      with:
        path: main
        ref: ${{ github.ref }}

    - name: Setup .NET Core SDK 6.0.x & 7.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          6.0.x
          7.0.x

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    # - if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    - name: Update CLI Version Numbers
      run: |
        $content = Get-Content main/Meadow.CLI/Meadow.CLI.csproj | Out-String
        $newcontent = $content -replace '<PackageVersion>.*</PackageVersion>', '<PackageVersion>${{ENV.RELEASE_VERSION}}</PackageVersion>'
        $newcontent | Set-Content main/Meadow.CLI/Meadow.CLI.csproj

        $content = Get-Content main/Meadow.CLI.Core/Meadow.CLI.Core.csproj | Out-String
        $newcontent = $content -replace '<Version>.*</Version>', '<Version>${{ENV.RELEASE_VERSION}}</Version>'
        $newcontent | Set-Content main/Meadow.CLI.Core/Meadow.CLI.Core.csproj

        $content = Get-Content main/Meadow.CLI.Core/Meadow.CLI.Core.6.0.0.csproj | Out-String
        $newcontent = $content -replace '<Version>.*</Version>', '<Version>${{ENV.RELEASE_VERSION}}</Version>'
        $newcontent | Set-Content main/Meadow.CLI.Core/Meadow.CLI.Core.6.0.0.csproj

        $content = Get-Content main/Meadow.CLI.Core/Meadow.CLI.Core.VS2019.csproj | Out-String
        $newcontent = $content -replace '<Version>.*</Version>', '<Version>${{ENV.RELEASE_VERSION}}</Version>'
        $newcontent | Set-Content main/Meadow.CLI.Core/Meadow.CLI.Core.VS2019.csproj

        $content = Get-Content main/Meadow.CLI.Core/Constants.cs | Out-String
        $newcontent = $content -replace 'CLI_VERSION = \".*\";', 'CLI_VERSION = "${{ENV.RELEASE_VERSION}}";'
        $newcontent | Set-Content main/Meadow.CLI.Core/Constants.cs

    - name: Add MSBuild to Path
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore dependencies
      run: dotnet restore main/MeadowCLI.sln

    - name: Build
      run: msbuild main/MeadowCLI.sln /t:Rebuild /p:Configuration=Release

    - name: Upload nuget Artifacts for internal testing
      uses: actions/upload-artifact@v2
      with:
        name: Meadow.CLI.nuget
        path: 'main/**/*.nupkg'

    - if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      name: Publish Meadow.CLI Nuget publically
      run: |
        nuget push main\**\Meadow.CLI\bin\Release\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}

  build-vswin-2019:
    runs-on: windows-2019
    needs: [build-and-optionally-publish-nuget]
    name: Build Win 2019 Extension

    steps:
    - name: Checkout Meadow.CLI.Core side-by-side
      uses: actions/checkout@v2
      with:
        repository: WildernessLabs/Meadow.CLI
        path: Meadow.CLI
        ref: ${{ github.ref }}

    - name: Checkout Win Extension side-by-side
      uses: actions/checkout@v2
      with:
        repository: WildernessLabs/VS_Win_Meadow_Extension
        path: vs-win
        ref: ${{ github.ref }}

    - name: Setup .NET Core SDK 5.0.x, 6.0.x & 7.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          5.0.x
          6.0.x
          7.0.x

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Add MSBuild to Path
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore dependencies
      run: dotnet restore vs-win/VS_Meadow_Extension.2019.sln

    - name: Build VS2019 Extension
      run: msbuild vs-win/VS_Meadow_Extension.2019.sln  /t:Rebuild /p:Configuration=Release
      env:
        DevEnvDir: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\IDE'

  build-vswin-2022:
    runs-on: windows-2022
    needs: [build-and-optionally-publish-nuget]
    name: Build Win 2022 Extension

    steps:
    - name: Checkout Meadow.CLI.Core side-by-side
      uses: actions/checkout@v2
      with:
        repository: WildernessLabs/Meadow.CLI
        path: Meadow.CLI
        ref: ${{ github.ref }}

    - name: Checkout Win Extension side-by-side
      uses: actions/checkout@v2
      with:
        repository: WildernessLabs/VS_Win_Meadow_Extension
        path: vs-win
        ref: ${{ github.ref }}

    - name: Setup .NET Core SDK 6.0.x & 7.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          6.0.x
          7.0.x

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Add MSBuild to Path
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: '[17.0, 18.0)'

    - name: Restore dependencies
      run: dotnet restore vs-win/VS_Meadow_Extension.2022.sln

    - name: Build VS2022 Extension
      run: msbuild vs-win/VS_Meadow_Extension.2022.sln  /t:Rebuild /p:Configuration=Release
      env:
        DevEnvDir: 'C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\IDE'

  build-vsmac-2019:
    name: Build Mac 2019 Extension
    needs: [build-and-optionally-publish-nuget]
    runs-on: macos-11

    steps:
    - name: Checkout Meadow.CLI.Core side-by-side
      uses: actions/checkout@v2
      with:
        path: Meadow.CLI
        ref: ${{ github.ref }}

    - name: Checkout Mac Extension side-by-side
      uses: actions/checkout@v2
      with:
        repository: WildernessLabs/VS_Mac_Meadow_Extension
        path: vs-mac
        ref: ${{ github.ref }}

    - name: Set default Xcode 13.0
      run: |
        XCODE_ROOT=/Applications/Xcode_13.0.0.app
        echo "MD_APPLE_SDK_ROOT=$XCODE_ROOT" >> $GITHUB_ENV
        sudo xcode-select -s $XCODE_ROOT

    - name: Setup .NET Core SDK 5.0.x, 6.0.x & 7.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          5.0.x
          6.0.x
          7.0.x

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Restore dependencies
      run: dotnet restore vs-mac/VS4Mac_Meadow_Extension.sln

    - name: Work around so that VS2019 is picked up.
      run: |
        mv "/Applications/Visual Studio.app" "/Applications/Visual Studio 2022.app"
        mv "/Applications/Visual Studio 2019.app" "/Applications/Visual Studio.app"

    - name: Build
      run: msbuild vs-mac/VS4Mac_Meadow_Extension.sln /t:Rebuild /p:Configuration=Release

  build-vsmac-2022:
    name: Build Mac 2022 Extension
    needs: [build-and-optionally-publish-nuget]
    runs-on: macos-12

    steps:
    - name: Checkout Meadow.CLI.Core side-by-side
      uses: actions/checkout@v2
      with:
        path: Meadow.CLI
        ref: ${{ github.ref }}

    - name: Checkout Mac Extension side-by-side
      uses: actions/checkout@v2
      with:
        repository: WildernessLabs/VS_Mac_Meadow_Extension
        path: vs-mac
        ref: ${{ github.ref }}

    - name: Setup .NET Core SDK 6.0.x & 7.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          6.0.x
          7.0.x

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

    - name: Restore dependencies
      run: dotnet restore vs-mac/VS4Mac_Meadow_Extension_2022.sln

    - name: Build
      run: dotnet msbuild vs-mac/VS4Mac_Meadow_Extension_2022.sln /t:Rebuild /p:Configuration=Release

  build-vscode:
    runs-on: windows-latest
    needs: [build-and-optionally-publish-nuget]
    name: Build VSCode Extension

    steps:
    - name: Checkout Meadow.CLI.Core side-by-side
      uses: actions/checkout@v2
      with:
        path: Meadow.CLI
        ref: ${{ github.ref }}

    - name: Checkout VSCode Extension side-by-side
      uses: actions/checkout@v2
      with:
        repository: WildernessLabs/VSCode_Meadow_Extension
        path: vs-code
        ref: ${{ github.ref }}
        submodules: true

    - name: Setup .NET Core SDK 6.0.x & 7.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          6.0.x
          7.0.x

    - name: Setup Nuget
      uses: Nuget/setup-nuget@v1.0.5

    - name: Setup Node.js 14
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install NPM
      run: |
        npm install
        npm update

    - name: Install vsce
      run: |
        npm i -g vsce

    - name: Add MSBuild to Path
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore VSCode Extension dependencies
      run: dotnet restore vs-code/src/csharp/VSCodeMeadow.sln

    - name: Build VSCode Extension
      id: VSCode-Extension
      run: msbuild vs-code/src/csharp/VSCodeMeadow.sln /t:Rebuild /p:Configuration=Release
